version: '3.9'
services:
  nginx:
    container_name: metrific-nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    environment:
      HANDLER: public/index.php
    volumes:
      - ./:/var/task
    depends_on:
      - php
    ports:
      - '8080:80'
    networks:
      - metrific
  php:
    container_name: metrific-php
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    depends_on:
      apm-server:
        condition: service_healthy
    ports:
      - 80:80
    volumes:
      - .:/var/task
    env_file:
      - .env
    working_dir: /var/task
    environment:
      COMPOSER_MEMORY_LIMIT: -1
      COMPOSER_HOME: /tmp
    networks:
      - metrific
  apm-server:
    image: docker.elastic.co/apm/apm-server:${ELK_VERSION}
    user: root
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
    cap_drop: [ "ALL" ]
    ports:
      - 8200:8200
    networks:
      - metrific
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E apm-server.secret_token=${ELASTIC_APM_SECRET_TOKEN}
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
      user: root
      environment:
        node.name: elasticsearch
        ES_JAVA_OPTS: -Xms512m -Xmx512m
        discovery.type: single-node
      ulimits:
        memlock:
          hard: -1
          soft: -1
      volumes:
        - metrific_data:/usr/share/elasticsearch/data
      ports:
        - 9200:9200
      networks:
        - metrific
      healthcheck:
        interval: 20s
        retries: 10
        test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
      image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
      depends_on:
        - elasticsearch
      environment:
        ELASTICSEARCH_URL: http://elasticsearch:9200
        ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ports:
        - 5601:5601
      networks:
        - metrific
      healthcheck:
        interval: 10s
        retries: 20
        test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

volumes:
    metrific_data:
      driver: local

networks:
    metrific:
      driver: bridge
